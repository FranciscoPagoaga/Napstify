[{"C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\index.js":"1","C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\App.js":"2","C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\reportWebVitals.js":"3","C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\Components\\LoginForm.jsx":"4","C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\Views\\Login.jsx":"5","C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\Components\\Header.jsx":"6","C:\\Users\\Francisco Pagoaga\\Desktop\\napstify\\src\\index.js":"7","C:\\Users\\Francisco Pagoaga\\Desktop\\napstify\\src\\App.js":"8","C:\\Users\\Francisco Pagoaga\\Desktop\\napstify\\src\\reportWebVitals.js":"9","C:\\Users\\Francisco Pagoaga\\Desktop\\napstify\\src\\Views\\Login.jsx":"10","C:\\Users\\Francisco Pagoaga\\Desktop\\napstify\\src\\Components\\LoginForm.jsx":"11","C:\\Users\\Francisco Pagoaga\\Desktop\\napstify\\src\\Components\\Header.jsx":"12","C:\\Users\\Francisco Pagoaga\\Desktop\\napstify\\src\\config.js":"13","C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\config.js":"14","C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\Views\\AlbumPreview.jsx":"15","C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\Components\\Albums.jsx":"16","C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\Components\\AlbumCard.jsx":"17","C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\Components\\AlbumModal.jsx":"18"},{"size":543,"mtime":1607834561164,"results":"19","hashOfConfig":"20"},{"size":489,"mtime":1608529931637,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":1604,"mtime":1608529972892,"results":"23","hashOfConfig":"20"},{"size":533,"mtime":1607884339820,"results":"24","hashOfConfig":"20"},{"size":508,"mtime":1607883714300,"results":"25","hashOfConfig":"20"},{"size":543,"mtime":1607834561164,"results":"26","hashOfConfig":"27"},{"size":682,"mtime":1607916024757,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":533,"mtime":1607884339820,"results":"30","hashOfConfig":"27"},{"size":956,"mtime":1607883720698,"results":"31","hashOfConfig":"27"},{"size":508,"mtime":1607883714300,"results":"32","hashOfConfig":"27"},{"size":3053,"mtime":1607914441334,"results":"33","hashOfConfig":"27"},{"size":2774,"mtime":1608502222272,"results":"34","hashOfConfig":"20"},{"size":233,"mtime":1608364199955,"results":"35","hashOfConfig":"20"},{"size":7793,"mtime":1608579572734,"results":"36","hashOfConfig":"20"},{"size":613,"mtime":1608412635552,"results":"37","hashOfConfig":"20"},{"size":1535,"mtime":1608528928538,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"13awqq9",{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1ub6w1z",{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"41"},"C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\index.js",[],["83","84"],"C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\App.js",["85","86","87","88","89","90"],"import { useEffect, useState } from \"react\";\nimport Login from \"./Views/Login\";\nimport AlbumPreview from \"./Views/AlbumPreview\";\nimport { BrowserRouter as Router, Switch, Redirect, Route, Link } from 'react-router-dom';\n\n\nfunction App() {\n  const [account, setAccount] = useState([]);\n\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        <Login />\n      </Route>\n      <Route exact path=\"/Albums\">\n        <AlbumPreview />\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\reportWebVitals.js",[],"C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\Components\\LoginForm.jsx",[],"C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\Views\\Login.jsx",["91"],"import LoginForm from \"../Components/LoginForm.jsx\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Header from \"../Components/Header.jsx\";\r\nimport Background from \"../Icons/Background-Login.jpg\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div>\r\n      <div id=\"bg\">\r\n        <img src={Background} />\r\n      </div>\r\n      <Header />\r\n      <Row noGutters style={{ paddingTop: \"10em\" }}>\r\n        <Col md={{ size: 4, offset: 4 }}>\r\n          <LoginForm />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\Components\\Header.jsx",["92"],"import React, { useState } from \"react\";\r\nimport { Navbar, NavbarBrand } from \"reactstrap\";\r\nimport \"../Styles/Login.css\";\r\n\r\nconst Header = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n    <div className=\"header\">\r\n      <Navbar color=\"dark\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\" style={{ color: \"#25DBD2\" }}>\r\n          Napstify\r\n        </NavbarBrand>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Francisco Pagoaga\\Desktop\\napstify\\src\\index.js",[],["93","94"],"C:\\Users\\Francisco Pagoaga\\Desktop\\napstify\\src\\App.js",["95","96"],"C:\\Users\\Francisco Pagoaga\\Desktop\\napstify\\src\\reportWebVitals.js",[],"C:\\Users\\Francisco Pagoaga\\Desktop\\napstify\\src\\Views\\Login.jsx",["97"],"C:\\Users\\Francisco Pagoaga\\Desktop\\napstify\\src\\Components\\LoginForm.jsx",[],"C:\\Users\\Francisco Pagoaga\\Desktop\\napstify\\src\\Components\\Header.jsx",["98"],"C:\\Users\\Francisco Pagoaga\\Desktop\\napstify\\src\\config.js",[],"C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\config.js",[],["99","100"],"C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\Views\\AlbumPreview.jsx",[],"C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\Components\\Albums.jsx",["101","102","103","104","105"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport AlbumCard from \"./AlbumCard.jsx\";\r\nimport AlbumModal from \"./AlbumModal.jsx\";\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\nimport Web3 from \"web3\";\r\nimport { ALBUM_ABI, ALBUM_ADDRESS } from \"../config\";\r\n\r\nconst Albums = () => {\r\n  const [albumModal, setAlbumModal] = useState(false);\r\n  const [songModal, setSongModal] = useState(false);\r\n  const [previewModal, setPreviewModal] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [artist, setArtist] = useState(\"\");\r\n  let songs = [];\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [fetched, setFetched] = useState(false);\r\n  const handleChange = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\r\n  const [albumslist, setAlbumsList] = useState([]);\r\n  const [showedList, setShowedList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!fetched) {\r\n      loadBlockchainData();\r\n    }\r\n    if (filter !== \"\") {\r\n      let filteredAlbums = albumslist.filter((element) =>\r\n        element.name.toUpperCase().includes(filter.toUpperCase())\r\n      );\r\n      setShowedList(filteredAlbums);\r\n      console.log(filteredAlbums);\r\n    } else {\r\n      setShowedList(albumslist);\r\n    }\r\n  }, [filter]);\r\n\r\n  const loadBlockchainData = async () => {\r\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\r\n    const network = await web3.eth.net.getNetworkType();\r\n    const albums = new web3.eth.Contract(ALBUM_ABI, ALBUM_ADDRESS);\r\n    const albumCount = await albums.methods.albumCount().call();\r\n    console.log(albumCount);\r\n    const songCount = await albums.methods.songCount().call();\r\n    console.log(await albums.methods.albums(1).call());\r\n    console.log(albums);\r\n    let updatedAlbumsList = [];\r\n    for (let i = 1; i <= albumCount; i++) {\r\n      let payload = {\r\n        name: \"\",\r\n        artist: \"\",\r\n        songs: [],\r\n      };\r\n      let albumlist1 = await albums.methods.albums(i).call();\r\n      payload.name = albumlist1.albumName;\r\n      payload.artist = albumlist1.artist;\r\n      for (let j = 1; j <= songCount; j++) {\r\n        let songs = await albums.methods.songs(j).call();\r\n        if (songs.albumid === albumlist1.id) {\r\n          payload.songs.push(songs);\r\n        }\r\n      }\r\n      console.log(payload);\r\n      updatedAlbumsList.push(payload);\r\n    }\r\n    console.log(updatedAlbumsList);\r\n    setAlbumsList(updatedAlbumsList);\r\n    setShowedList(updatedAlbumsList);\r\n    setFetched(true);\r\n  };\r\n\r\n  const nextModal = () => {\r\n    setSongModal(!songModal);\r\n  };\r\n\r\n  const nextModalData = (event, values) => {\r\n    let payload = {\r\n      name: values.album,\r\n      artist: values.artist,\r\n    };\r\n    setName(values.album);\r\n    setArtist(values.artist);\r\n    nextModal();\r\n  };\r\n\r\n  const addSong = (event, values) => {\r\n    let song = {\r\n      name: values.name,\r\n      duration: values.duration,\r\n      genre: values.genre,\r\n    };\r\n    songs.push(song);\r\n    console.log(songs);\r\n  };\r\n\r\n  const createAlbum = async () => {\r\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\r\n    const albums = new web3.eth.Contract(ALBUM_ABI, ALBUM_ADDRESS);\r\n    const accounts = await web3.eth.getAccounts();\r\n    albums.methods\r\n      .createAlbum(name, artist)\r\n      .send({ from: accounts[0] })\r\n      .once(\"receipt\", () => {\r\n        console.log(\"agrego\");\r\n      });\r\n    for (let index = 0; index < songs.length; index++) {\r\n      albums.methods\r\n        .createSong(\r\n          songs[index].name,\r\n          songs[index].duration,\r\n          songs[index].genre\r\n        )\r\n        .send({ from: accounts[0] })\r\n        .once(\"receipt\", () => {\r\n          console.log(\"agrego\");\r\n        });\r\n    }\r\n    closeModals();\r\n    loadBlockchainData();\r\n  };\r\n\r\n  const onClose = () =>{\r\n    setSelectedAlbum(null);\r\n  }\r\n\r\n  const closeModals = () => {\r\n    setAlbumModal(false);\r\n    setSongModal(false);\r\n    songs = [];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Modal para crear album */}\r\n      <Modal isOpen={albumModal}>\r\n        <AvForm onValidSubmit={nextModalData}>\r\n          <ModalHeader>Add Album:</ModalHeader>\r\n          <ModalBody>\r\n            <AvField\r\n              name=\"album\"\r\n              label=\"Album\"\r\n              placeholder=\"Insert Album\"\r\n              validate={{ required: true }}\r\n            />\r\n            <AvField\r\n              name=\"artist\"\r\n              label=\"Artist\"\r\n              placeholder=\"Insert Artist\"\r\n              validate={{ required: true }}\r\n            />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" type=\"submit\">\r\n              Next\r\n            </Button>\r\n            <Button\r\n              color=\"secondary\"\r\n              onClick={() => setAlbumModal(!albumModal)}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </AvForm>\r\n      </Modal>\r\n      {/* Modal para agregar canciones a album */}\r\n      <Modal isOpen={songModal}>\r\n        <AvForm onValidSubmit={addSong}>\r\n          <ModalHeader>Add Song:</ModalHeader>\r\n          <ModalBody>\r\n            <AvField\r\n              name=\"name\"\r\n              label=\"Song\"\r\n              placeholder=\"Insert Song\"\r\n              validate={{ required: true }}\r\n            />\r\n            <AvField\r\n              name=\"duration\"\r\n              label=\"Duration\"\r\n              placeholder=\"Insert Song Duration\"\r\n              validate={{\r\n                required: true,\r\n                pattern: {\r\n                  value: \"^[0-9:]+$\",\r\n                  errorMessage: \"Insert accepted Values (0-9, :)\",\r\n                },\r\n              }}\r\n            />\r\n            <AvField\r\n              name=\"genre\"\r\n              label=\"Genre\"\r\n              placeholder=\"Insert Genre\"\r\n              validate={{ required: true }}\r\n            />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={createAlbum}>\r\n              Create Album\r\n            </Button>\r\n            <Button color=\"primary\" type=\"submit\">\r\n              Add Song\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={() => closeModals()}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </AvForm>\r\n      </Modal>\r\n\r\n      {selectedAlbum && <AlbumModal isOpen={true} selectedAlbum={selectedAlbum} close={onClose} ></AlbumModal>}\r\n\r\n\r\n      <Row noGutters style={{ paddingBottom: \"10px\" }}>\r\n        <h1>Albums:</h1>\r\n        <Button\r\n          color=\"primary\"\r\n          style={{\r\n            height: \"70%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n          onClick={() => setAlbumModal(!albumModal)}\r\n        >\r\n          Add Album\r\n        </Button>\r\n      </Row>\r\n      <Row noGutters style={{ paddingBottom: \"2em\" }}>\r\n        <Input\r\n          placeholder=\"Filter Album by Name\"\r\n          onChange={handleChange}\r\n          value={filter}\r\n          style={{ width: \"40em\" }}\r\n        ></Input>\r\n      </Row>\r\n      {albumslist.length > 0 ? (\r\n        <Row noGutters>\r\n          {showedList.map((album, i) => (\r\n            <div onClick={()=> setSelectedAlbum(album)}>\r\n              <Col\r\n                md={{ size: \"auto\" }}\r\n                style={{ marginRight: \"10px\", marginLeft: \"10px\" }}\r\n              >\r\n                <AlbumCard album={album.name} artist={album.artist} />\r\n              </Col>\r\n            </div>\r\n          ))}\r\n        </Row>\r\n      ) : (\r\n        \"lista esta vacia\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Albums;\r\n","C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\Components\\AlbumCard.jsx",[],"C:\\Users\\Francisco Pagoaga\\Desktop\\Napstify\\src\\Components\\AlbumModal.jsx",["106"],"import React, { useState } from \"react\";\r\nimport { Modal, ModalHeader, Table, CardImg } from \"reactstrap\";\r\nimport img from \"../AlbumImg.png\";\r\nconst AlbumModal = (props) => {\r\n  return (\r\n    <Modal\r\n      style={{ maxWidth: \"1400px\", width: \"80%\" }}\r\n      isOpen={props.isOpen}\r\n      toggle={props.close}\r\n    >\r\n      <ModalHeader toggle={props.close}>\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"auto 1fr\",\r\n            gap: \"1em\",\r\n          }}\r\n        >\r\n          <div>\r\n            <CardImg\r\n              top\r\n              style={{ width: \"200px\", height: \"200px\" }}\r\n              src={img}\r\n              alt=\"Album default\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <h1>{props.selectedAlbum.name}</h1>\r\n            <h2>{props.selectedAlbum.artist}</h2>\r\n            <Table hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Song Name</th>\r\n                  <th>Genre</th>\r\n                  <th>Duration</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              {props.selectedAlbum.songs.map((songs, i) => (\r\n                <tbody>\r\n                  <th>{i + 1}</th>\r\n                  <td>{songs.name}</td>\r\n                  <td>{songs.genre}</td>\r\n                  <td>{songs.duration}</td>\r\n                </tbody>\r\n              ))}\r\n            </Table>\r\n          </div>\r\n        </div>\r\n      </ModalHeader>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AlbumModal;\r\n",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":10,"nodeType":"113","messageId":"114","endLine":1,"endColumn":19},{"ruleId":"111","severity":1,"message":"115","line":4,"column":35,"nodeType":"113","messageId":"114","endLine":4,"endColumn":41},{"ruleId":"111","severity":1,"message":"116","line":4,"column":43,"nodeType":"113","messageId":"114","endLine":4,"endColumn":51},{"ruleId":"111","severity":1,"message":"117","line":4,"column":60,"nodeType":"113","messageId":"114","endLine":4,"endColumn":64},{"ruleId":"111","severity":1,"message":"118","line":8,"column":10,"nodeType":"113","messageId":"114","endLine":8,"endColumn":17},{"ruleId":"111","severity":1,"message":"119","line":8,"column":19,"nodeType":"113","messageId":"114","endLine":8,"endColumn":29},{"ruleId":"120","severity":1,"message":"121","line":10,"column":9,"nodeType":"122","endLine":10,"endColumn":33},{"ruleId":"111","severity":1,"message":"123","line":8,"column":9,"nodeType":"113","messageId":"114","endLine":8,"endColumn":15},{"ruleId":"107","replacedBy":"124"},{"ruleId":"109","replacedBy":"125"},{"ruleId":"111","severity":1,"message":"118","line":7,"column":10,"nodeType":"113","messageId":"114","endLine":7,"endColumn":17},{"ruleId":"111","severity":1,"message":"126","line":11,"column":11,"nodeType":"113","messageId":"114","endLine":11,"endColumn":18},{"ruleId":"120","severity":1,"message":"121","line":10,"column":9,"nodeType":"122","endLine":10,"endColumn":33},{"ruleId":"111","severity":1,"message":"123","line":8,"column":9,"nodeType":"113","messageId":"114","endLine":8,"endColumn":15},{"ruleId":"107","replacedBy":"127"},{"ruleId":"109","replacedBy":"128"},{"ruleId":"111","severity":1,"message":"129","line":21,"column":10,"nodeType":"113","messageId":"114","endLine":21,"endColumn":22},{"ruleId":"111","severity":1,"message":"130","line":21,"column":24,"nodeType":"113","messageId":"114","endLine":21,"endColumn":39},{"ruleId":"131","severity":1,"message":"132","line":47,"column":6,"nodeType":"133","endLine":47,"endColumn":14,"suggestions":"134"},{"ruleId":"111","severity":1,"message":"126","line":51,"column":11,"nodeType":"113","messageId":"114","endLine":51,"endColumn":18},{"ruleId":"111","severity":1,"message":"135","line":88,"column":9,"nodeType":"113","messageId":"114","endLine":88,"endColumn":16},{"ruleId":"111","severity":1,"message":"136","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'account' is assigned a value but never used.","'setAccount' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'toggle' is assigned a value but never used.",["137"],["138"],"'network' is assigned a value but never used.",["137"],["138"],"'previewModal' is assigned a value but never used.","'setPreviewModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'albumslist' and 'fetched'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowedList' needs the current value of 'albumslist'.","ArrayExpression",["139"],"'payload' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [albumslist, fetched, filter]",{"range":"142","text":"143"},[1422,1430],"[albumslist, fetched, filter]"]